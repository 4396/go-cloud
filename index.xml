<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go CDK</title>
    <link>https://gocloud.dev/</link>
    <description>Recent content on Go CDK</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2018–2019 The Go Cloud Development Kit Authors</copyright>
    <lastBuildDate>Mon, 03 Jun 2019 07:34:22 -0700</lastBuildDate>
    
	<atom:link href="https://gocloud.dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Structuring Portable Code</title>
      <link>https://gocloud.dev/concepts/structure/</link>
      <pubDate>Mon, 03 Jun 2019 07:34:22 -0700</pubDate>
      
      <guid>https://gocloud.dev/concepts/structure/</guid>
      <description>&lt;p&gt;The Go CDK&amp;rsquo;s APIs are intentionally structured to make it easier to separate
your application&amp;rsquo;s core logic from the details of the services it is using.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Publish Messages to a Topic</title>
      <link>https://gocloud.dev/howto/pubsub/publish/</link>
      <pubDate>Tue, 26 Mar 2019 09:44:15 -0700</pubDate>
      
      <guid>https://gocloud.dev/howto/pubsub/publish/</guid>
      <description>&lt;p&gt;Publishing a message to a topic with the Go CDK takes two steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open the topic with the Pub/Sub provider of your choice (once per topic).&lt;/li&gt;
&lt;li&gt;Send messages on the topic.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Tutorial: Command-Line Uploader</title>
      <link>https://gocloud.dev/tutorials/cli-uploader/</link>
      <pubDate>Tue, 19 Mar 2019 18:45:53 -0700</pubDate>
      
      <guid>https://gocloud.dev/tutorials/cli-uploader/</guid>
      <description>&lt;p&gt;This quickstart will build a command line application called &lt;code&gt;upload&lt;/code&gt; that
uploads files to blob storage on GCP, AWS, and Azure. Blob storage stores binary
data under a string key, and is one of the most frequently used cloud
services.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tutorial: Guestbook Application</title>
      <link>https://gocloud.dev/tutorials/guestbook/</link>
      <pubDate>Wed, 10 Jul 2019 16:58:00 -0700</pubDate>
      
      <guid>https://gocloud.dev/tutorials/guestbook/</guid>
      <description>&lt;p&gt;In this tutorial, we will deploy an existing Go CDK application called Guestbook
locally, then on Google Cloud Platform (GCP), Amazon Web Services (AWS), and
Azure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>URLs</title>
      <link>https://gocloud.dev/concepts/urls/</link>
      <pubDate>Mon, 06 May 2019 09:55:09 -0700</pubDate>
      
      <guid>https://gocloud.dev/concepts/urls/</guid>
      <description>&lt;p&gt;In addition to creating portable types via provider-specific constructors
(e.g., creating a &lt;code&gt;*blob.Bucket&lt;/code&gt; using &lt;a href=&#34;https://godoc.org/gocloud.dev/blob/s3blob#OpenBucket&#34;&gt;&lt;code&gt;s3blob.OpenBucket&lt;/code&gt;&lt;/a&gt;), many portable types
can also be created using a URL. The scheme of the URL specifies the provider,
and each provider implementation has code to convert the URL into the data
needed to call its constructor. For example, calling
&lt;code&gt;blob.OpenBucket(&amp;quot;s3blob://my-bucket&amp;quot;)&lt;/code&gt; will return a &lt;code&gt;*blob.Bucket&lt;/code&gt; created
using &lt;a href=&#34;https://godoc.org/gocloud.dev/blob/s3blob#OpenBucket&#34;&gt;&lt;code&gt;s3blob.OpenBucket&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Subscribe to a Topic&#39;s Messages</title>
      <link>https://gocloud.dev/howto/pubsub/subscribe/</link>
      <pubDate>Tue, 26 Mar 2019 09:44:33 -0700</pubDate>
      
      <guid>https://gocloud.dev/howto/pubsub/subscribe/</guid>
      <description>&lt;p&gt;Subscribing to messages on a topic with the Go CDK takes three steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open the subscription with the Pub/Sub provider of your choice (once per subscription).&lt;/li&gt;
&lt;li&gt;Receive messages from the topic.&lt;/li&gt;
&lt;li&gt;For each message, acknowledge its receipt using the &lt;code&gt;Ack&lt;/code&gt; method
after completing any work related to the message. This will prevent the
message from being redelivered.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Using provider-specific APIs</title>
      <link>https://gocloud.dev/concepts/as/</link>
      <pubDate>Fri, 10 May 2019 11:17:09 -0700</pubDate>
      
      <guid>https://gocloud.dev/concepts/as/</guid>
      <description>&lt;p&gt;It is not feasible or desirable for APIs like &lt;code&gt;blob.Bucket&lt;/code&gt; to encompass the
full functionality of every provider. Rather, we intend to provide a subset
of the most commonly used functionality. There will be cases where a
developer wants to access provider-specific functionality, such as unexposed
APIs or data fields, errors, or options. This can be accomplished using &lt;code&gt;As&lt;/code&gt;
functions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>postgres</title>
      <link>https://gocloud.dev/ref/postgres/</link>
      <pubDate>Thu, 27 Jun 2019 13:03:45 -0700</pubDate>
      
      <guid>https://gocloud.dev/ref/postgres/</guid>
      <description>&lt;p&gt;The &lt;code&gt;postgres&lt;/code&gt; package provides functions for connecting to &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;
databases for both on-premise and cloud-provided instances using the
&lt;a href=&#34;https://godoc.org/database/sql#DB&#34;&gt;&lt;code&gt;*sql.DB&lt;/code&gt;&lt;/a&gt; type from the Go standard library. Database connections opened
using this package will automatically collect diagnostic information via
&lt;a href=&#34;https://opencensus.io/&#34;&gt;OpenCensus&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mysql</title>
      <link>https://gocloud.dev/ref/mysql/</link>
      <pubDate>Mon, 11 Mar 2019 10:02:56 -0700</pubDate>
      
      <guid>https://gocloud.dev/ref/mysql/</guid>
      <description>&lt;p&gt;The &lt;code&gt;mysql&lt;/code&gt; package provides functions for connecting to &lt;a href=&#34;https://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt; databases
for both on-premise and cloud-provided instances using the &lt;a href=&#34;https://godoc.org/database/sql#DB&#34;&gt;&lt;code&gt;*sql.DB&lt;/code&gt;&lt;/a&gt; type
from the Go standard library. Database connections opened using this package
will automatically collect diagnostic information via &lt;a href=&#34;https://opencensus.io/&#34;&gt;OpenCensus&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>secrets</title>
      <link>https://gocloud.dev/ref/secrets/</link>
      <pubDate>Fri, 22 Feb 2019 13:03:06 -0800</pubDate>
      
      <guid>https://gocloud.dev/ref/secrets/</guid>
      <description>&lt;p&gt;Package &lt;code&gt;secrets&lt;/code&gt; provides an easy and portable way to encrypt and decrypt
messages.&lt;/p&gt;

&lt;p&gt;This package lets you do symmetric encryption and decryption within your
application layer. You can then store the secret data anywhere safely, for
example, using our blob, runtimevar packages etc. It is also integrated with
OpenCensus to get metrics and traces for &lt;code&gt;Encrypt&lt;/code&gt; and &lt;code&gt;Decrypt&lt;/code&gt;, and some
providers also have automatic audit logs for all key management related
activites.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>blob</title>
      <link>https://gocloud.dev/ref/blob/</link>
      <pubDate>Thu, 21 Feb 2019 16:21:29 -0800</pubDate>
      
      <guid>https://gocloud.dev/ref/blob/</guid>
      <description>&lt;p&gt;Blobs are a common abstraction for storing unstructured data on cloud storage
providers and accessing them via HTTP.&lt;/p&gt;

&lt;p&gt;Package &lt;code&gt;blob&lt;/code&gt; provides an easy and portable way to interact with blobs within a
storage location (&amp;ldquo;bucket&amp;rdquo;). It supports operations like reading and writing
blobs (using standard interfaces from the &lt;code&gt;io&lt;/code&gt; package), deleting blobs, and
listing blobs in a bucket.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pubsub</title>
      <link>https://gocloud.dev/ref/pubsub/</link>
      <pubDate>Thu, 21 Feb 2019 16:21:29 -0800</pubDate>
      
      <guid>https://gocloud.dev/ref/pubsub/</guid>
      <description>&lt;p&gt;Pub/Sub refers to implementations of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern&#34;&gt;publish-subscribe
pattern&lt;/a&gt;,
wherein clients connect to a cloud service to subscribe to topics or publish
messages that could be delivered to subscribers.&lt;/p&gt;

&lt;p&gt;Package &lt;code&gt;pubsub&lt;/code&gt; provides an easy and portable way to interact with
publish/subscribe systems that have &lt;a href=&#34;https://en.wikipedia.org/wiki/Advanced_Message_Queuing_Protocol#Overview&#34;&gt;at-least-once
delivery&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>runtimevar</title>
      <link>https://gocloud.dev/ref/runtimevar/</link>
      <pubDate>Thu, 21 Feb 2019 16:21:29 -0800</pubDate>
      
      <guid>https://gocloud.dev/ref/runtimevar/</guid>
      <description>&lt;p&gt;Package &lt;code&gt;runtimevar&lt;/code&gt; provides easy and portable access to the latest value of
remote configuration variables.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>server</title>
      <link>https://gocloud.dev/ref/server/</link>
      <pubDate>Thu, 21 Feb 2019 16:21:29 -0800</pubDate>
      
      <guid>https://gocloud.dev/ref/server/</guid>
      <description>&lt;p&gt;Package &lt;code&gt;server&lt;/code&gt; provides a preconfigured HTTP server with diagnostic hooks.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>