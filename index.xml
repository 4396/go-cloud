<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go CDK</title>
    <link>https://gocloud.dev/</link>
    <description>Recent content on Go CDK</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2018–2019 The Go Cloud Development Kit Authors</copyright>
    <lastBuildDate>Tue, 26 Mar 2019 09:44:15 -0700</lastBuildDate>
    
	<atom:link href="https://gocloud.dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Publish Messages to a Topic</title>
      <link>https://gocloud.dev/howto/pubsub/publish/</link>
      <pubDate>Tue, 26 Mar 2019 09:44:15 -0700</pubDate>
      
      <guid>https://gocloud.dev/howto/pubsub/publish/</guid>
      <description>&lt;p&gt;Publishing a message to a topic with the Go CDK takes two steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open the topic with the Pub/Sub provider of your choice (once per topic).&lt;/li&gt;
&lt;li&gt;Send messages on the topic.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Open a Bucket</title>
      <link>https://gocloud.dev/howto/blob/open-bucket/</link>
      <pubDate>Wed, 20 Mar 2019 14:51:29 -0700</pubDate>
      
      <guid>https://gocloud.dev/howto/blob/open-bucket/</guid>
      <description>&lt;p&gt;The first step in interacting with unstructured storage is connecting to your
storage provider. Every storage provider is a little different, but the Go CDK
lets you interact with all of them using the &lt;a href=&#34;https://godoc.org/gocloud.dev/blob#Bucket&#34;&gt;&lt;code&gt;*blob.Bucket&lt;/code&gt; type&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tutorial: Command-Line Uploader</title>
      <link>https://gocloud.dev/tutorials/cli-uploader/</link>
      <pubDate>Tue, 19 Mar 2019 18:45:53 -0700</pubDate>
      
      <guid>https://gocloud.dev/tutorials/cli-uploader/</guid>
      <description>&lt;p&gt;This quickstart will build a command line application called &lt;code&gt;upload&lt;/code&gt; that
uploads files to blob storage on both AWS and GCP. Blob storage stores binary
data under a string key, and is one of the most frequently used cloud
services.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Subscribe to a Topic&#39;s Messages</title>
      <link>https://gocloud.dev/howto/pubsub/subscribe/</link>
      <pubDate>Tue, 26 Mar 2019 09:44:33 -0700</pubDate>
      
      <guid>https://gocloud.dev/howto/pubsub/subscribe/</guid>
      <description>&lt;p&gt;Subscribing to messages on a topic with the Go CDK takes three steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open the subscription with the Pub/Sub provider of your choice (once per subscription).&lt;/li&gt;
&lt;li&gt;Receive messages from the topic.&lt;/li&gt;
&lt;li&gt;For each message, acknowledge its receipt using the &lt;code&gt;Ack&lt;/code&gt; method
after completing any work related to the message. This will prevent the
message from being redelivered.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Store and Access Unstructured Data</title>
      <link>https://gocloud.dev/howto/blob/data/</link>
      <pubDate>Thu, 21 Mar 2019 08:42:51 -0700</pubDate>
      
      <guid>https://gocloud.dev/howto/blob/data/</guid>
      <description>&lt;p&gt;Once you have &lt;a href=&#34;https://gocloud.dev/howto/blob/open-bucket/&#34;&gt;opened a bucket&lt;/a&gt; for the storage provider you want, you can
store and access data from it using the standard Go I/O patterns.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tutorial: Deploy to AWS</title>
      <link>https://gocloud.dev/tutorials/deploy-aws/</link>
      <pubDate>Tue, 19 Mar 2019 19:17:56 -0700</pubDate>
      
      <guid>https://gocloud.dev/tutorials/deploy-aws/</guid>
      <description>&lt;p&gt;In this tutorial, we will deploy an existing Go CDK application called
Guestbook to Amazon Web Services (AWS).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tutorial: Deploy to GCP</title>
      <link>https://gocloud.dev/tutorials/deploy-gcp/</link>
      <pubDate>Wed, 20 Mar 2019 09:47:11 -0700</pubDate>
      
      <guid>https://gocloud.dev/tutorials/deploy-gcp/</guid>
      <description>&lt;p&gt;In this tutorial, we will deploy an existing Go CDK application called
Guestbook to Google Cloud Platform (GCP).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tutorial: Connect to Azure</title>
      <link>https://gocloud.dev/tutorials/deploy-azure/</link>
      <pubDate>Wed, 20 Mar 2019 09:59:16 -0700</pubDate>
      
      <guid>https://gocloud.dev/tutorials/deploy-azure/</guid>
      <description>&lt;p&gt;In this tutorial, we will run an existing Go CDK application called Guestbook
backed by services running on Microsoft Azure. The Go CDK doesn&amp;rsquo;t have
support for SQL on Azure yet (&lt;a href=&#34;https://github.com/google/go-cloud/issues/1305&#34;&gt;#1305&lt;/a&gt;), so we&amp;rsquo;ll run MySQL and the
binary locally. This tutorial will show how to use Azure storage for the MOTD
and Gopher logo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>URLs</title>
      <link>https://gocloud.dev/concepts/urls/</link>
      <pubDate>Mon, 06 May 2019 09:55:09 -0700</pubDate>
      
      <guid>https://gocloud.dev/concepts/urls/</guid>
      <description>&lt;p&gt;In addition to creating portable types via provider-specific constructors
(e.g., creating a &lt;code&gt;*blob.Bucket&lt;/code&gt; using &lt;a href=&#34;https://godoc.org/gocloud.dev/blob/s3blob#OpenBucket&#34;&gt;&lt;code&gt;s3blob.OpenBucket&lt;/code&gt;&lt;/a&gt;), many portable types
can also be created using a URL. The scheme of the URL specifies the provider,
and each provider implementation has code to convert the URL into the data
needed to call its constructor. For example, calling
&lt;code&gt;blob.OpenBucket(&amp;quot;s3blob://my-bucket&amp;quot;)&lt;/code&gt; will return a &lt;code&gt;*blob.Bucket&lt;/code&gt; created
using &lt;a href=&#34;https://godoc.org/gocloud.dev/blob/s3blob#OpenBucket&#34;&gt;&lt;code&gt;s3blob.OpenBucket&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL/Postgres</title>
      <link>https://gocloud.dev/ref/sql/</link>
      <pubDate>Mon, 11 Mar 2019 10:02:56 -0700</pubDate>
      
      <guid>https://gocloud.dev/ref/sql/</guid>
      <description>&lt;p&gt;The &lt;code&gt;mysql&lt;/code&gt; and &lt;code&gt;postgres&lt;/code&gt; packages provide functions for connecting to
&lt;a href=&#34;https://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt; and &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt; databases for both on-premise and cloud-provided
instances using the &lt;a href=&#34;https://godoc.org/database/sql#DB&#34;&gt;&lt;code&gt;*sql.DB&lt;/code&gt;&lt;/a&gt; type from the Go standard library. Database
connections opened using these packages will automatically collect diagnostic
information via &lt;a href=&#34;https://opencensus.io/&#34;&gt;OpenCensus&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Secrets</title>
      <link>https://gocloud.dev/ref/secrets/</link>
      <pubDate>Fri, 22 Feb 2019 13:03:06 -0800</pubDate>
      
      <guid>https://gocloud.dev/ref/secrets/</guid>
      <description>&lt;p&gt;Package &lt;code&gt;secrets&lt;/code&gt; provides an easy and portable way to encrypt and decrypt
messages.&lt;/p&gt;

&lt;p&gt;This package lets you do symmetric encryption and decryption within your
application layer. You can then store the secret data anywhere safely, for
example, using our blob, runtimevar packages etc. It is also integrated with
OpenCensus to get metrics and traces for &lt;code&gt;Encrypt&lt;/code&gt; and &lt;code&gt;Decrypt&lt;/code&gt;, and some
providers also have automatic audit logs for all key management related
activites.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Blob</title>
      <link>https://gocloud.dev/ref/blob/</link>
      <pubDate>Thu, 21 Feb 2019 16:21:29 -0800</pubDate>
      
      <guid>https://gocloud.dev/ref/blob/</guid>
      <description>&lt;p&gt;Blobs are a common abstraction for storing unstructured data on cloud storage
providers and accessing them via HTTP.&lt;/p&gt;

&lt;p&gt;Package &lt;code&gt;blob&lt;/code&gt; provides an easy and portable way to interact with blobs within a
storage location (&amp;ldquo;bucket&amp;rdquo;). It supports operations like reading and writing
blobs (using standard interfaces from the &lt;code&gt;io&lt;/code&gt; package), deleting blobs, and
listing blobs in a bucket.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pubsub</title>
      <link>https://gocloud.dev/ref/pubsub/</link>
      <pubDate>Thu, 21 Feb 2019 16:21:29 -0800</pubDate>
      
      <guid>https://gocloud.dev/ref/pubsub/</guid>
      <description>&lt;p&gt;Pub/Sub refers to implementations of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern&#34;&gt;publish-subscribe
pattern&lt;/a&gt;,
wherein clients connect to a cloud service to subscribe to topics or publish
messages that could be delivered to subscribers.&lt;/p&gt;

&lt;p&gt;Package &lt;code&gt;pubsub&lt;/code&gt; provides an easy and portable way to interact with
publish/subscribe systems that have &lt;a href=&#34;https://en.wikipedia.org/wiki/Advanced_Message_Queuing_Protocol#Overview&#34;&gt;at-least-once
delivery&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Runtimevar</title>
      <link>https://gocloud.dev/ref/runtimevar/</link>
      <pubDate>Thu, 21 Feb 2019 16:21:29 -0800</pubDate>
      
      <guid>https://gocloud.dev/ref/runtimevar/</guid>
      <description>&lt;p&gt;Package &lt;code&gt;runtimevar&lt;/code&gt; provides easy and portable access to the latest value of
remote configuration variables.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Server</title>
      <link>https://gocloud.dev/ref/server/</link>
      <pubDate>Thu, 21 Feb 2019 16:21:29 -0800</pubDate>
      
      <guid>https://gocloud.dev/ref/server/</guid>
      <description>&lt;p&gt;Package &lt;code&gt;server&lt;/code&gt; provides a preconfigured HTTP server with diagnostic hooks.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>